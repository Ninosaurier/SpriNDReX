version: '3.9'
services:
  react:
    stdin_open: true
    container_name: react
    build: ./react
    volumes:
      - ./workDir/frontend:/var/www/frontend/:cached
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - network_infrastructure
#    command: npm start
  spring:
    build: spring
    container_name: spring
    tty: true
    command: mvn spring-boot:run
    networks:
      - network_infrastructure
    volumes:
      - ./workDir/backend:/home/spring/:cached
      - ./workDir/logs/:/var/log/nginx/:cached
    ports:
      - "8080:8080"
  MongoDB:
    image: mongo
    container_name: mongo_database
    ports:
      - "8081:8081"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: p
      MONGO_INITDB_DATABASE: mongoDb
    volumes:
      - /var/lib/mongodb/
    networks:
      - network_infrastructure
  #  MySQLDB:
  #    image: mysql
  #    container_name: mysql_database
  #    command: [ "--default-authentication-plugin=mysql_native_password" ]
  #    ports:
  #      - "3306:3306"
  #    environment:
  #      MYSQL_ROOT_PASSWORD: p
  #      MYSQL_DATABASE: mysqlDb
  #      MYSQL_USER: mysqlDbUser
  #      MYSQL_PASSWORD: p
  #    volumes:
  #      - /var/lib/mysql/
  #    networks:
  #      - network_infrastructure
  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    links:
      - spring
      - react
    volumes:
      - ./workDir/backend/:/home/spring:cached
      - ./workDir/frontend/:/var/www/frontend:cached
      - ./workDir/logs/:/var/log/nginx:cached
    networks:
      - network_infrastructure
networks:
  network_infrastructure:
    name: network_infrastructure
